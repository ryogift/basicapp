# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Rails

on:
  push:
    branches: [ main ]
    paths-ignore:
      - README.md
  pull_request:
    branches: [ main ]

jobs:
  run:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:14.1
        env:
          POSTGRES_PASSWORD: password
    container:
      image: ruby:3.1.0
      env:
        RAILS_ENV: test
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm キャッシュファイルは Linux/macOS の「~/.npm」に保存される
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache bundle gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-${{ env.cache-name }}-
            ${{ runner.os }}-gem-
            ${{ runner.os }}-
      - name: Install Middleware
        run: |
          wget https://dl.yarnpkg.com/debian/pubkey.gpg && apt-key add pubkey.gpg && \
          echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list
          apt-get update -qq && apt-get install -y nodejs postgresql-client yarn
      - name: Bundler setup
        run: |
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3
      - name: Yarn install
        run: bundle exec rails yarn:install
      - name: DB setup
        run: bundle exec rails db:setup
      - name: Run Test
        run: bundle exec rails test
